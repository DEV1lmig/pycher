"""change name of fie;d

Revision ID: 75df8ff22ef5
Revises: 6311b4ca5804
Create Date: 2025-05-29 16:10:03.214207

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision: str = '75df8ff22ef5'
down_revision: Union[str, None] = '6311b4ca5804'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(conn, table_name: str, column_name: str, schema: str = 'public') -> bool:
    """Checks if a column exists in a table."""
    sql = text(f"""
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.columns
            WHERE table_schema = :schema AND table_name = :table_name AND column_name = :column_name
        )
    """)
    return conn.execute(sql, {'schema': schema, 'table_name': table_name, 'column_name': column_name}).scalar_one()


def upgrade() -> None:
    """Upgrade schema."""
    bind = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists(bind, 'user_exercise_submissions', 'submission_at'):
        op.add_column('user_exercise_submissions', sa.Column('submission_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    if column_exists(bind, 'user_exercise_submissions', 'submission_date'):
        op.drop_column('user_exercise_submissions', 'submission_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    bind = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists(bind, 'user_exercise_submissions', 'submission_date'):
        op.add_column('user_exercise_submissions', sa.Column('submission_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    if column_exists(bind, 'user_exercise_submissions', 'submission_at'):
        op.drop_column('user_exercise_submissions', 'submission_at')
    # ### end Alembic commands ###
