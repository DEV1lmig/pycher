[
  {
    "id": 1,
    "lesson_id": 1,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.1.1: ¿Qué es Python?",
    "description": "Responde: ¿Cuál es una de las principales razones por las que Python es popular para principiantes?",
    "instructions": "Escribe tu respuesta como un string en la función print(). Ejemplo: print('Respuesta aquí')",
    "starter_code": "print(\"...\")",
    "solution_code": "print(\"Su sintaxis clara y legible\")",
    "test_cases": "[{\"input\": \"\", \"output\": \"Su sintaxis clara y legible\\n\"}]"
  },
  {
    "id": 2,
    "lesson_id": 2,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.2.1: Saludo Personalizado",
    "description": "Escribe un programa que imprima '¡Hola, [Tu Nombre]!' en pantalla, reemplazando [Tu Nombre] con tu nombre real.",
    "instructions": "Utiliza la función print().",
    "starter_code": "# Escribe tu código aquí\nprint(\"...\")",
    "solution_code": "print('¡Hola, David!')",
    "test_cases": "[{\"input\": \"\", \"output\": \"¡Hola, David!\\n\"}]"
  },
  {
    "id": 3,
    "lesson_id": 3,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.3.1: Variables y Tipos",
    "description": "Crea una variable `ciudad` con el valor \"Madrid\" y una variable `poblacion` con el valor 3300000. Imprime ambas variables.",
    "instructions": "Asigna los valores a las variables y luego usa print() para cada una.",
    "starter_code": "# Define las variables aquí\n\n# Imprime las variables aquí",
    "solution_code": "ciudad = \"Madrid\"\npoblacion = 3300000\nprint(ciudad)\nprint(poblacion)",
    "test_cases": "[{\"input\": \"\", \"output\": \"Madrid\\n3300000\\n\"}]"
  },
  {
    "id": 4,
    "lesson_id": null,
    "module_id": 1,
    "order_index": 99,
    "title": "Test Módulo 1: Fundamentos",
    "description": "Escribe un programa que defina una variable `libro_favorito` con el nombre de un libro (string) y otra variable `paginas` con su número de páginas (integer). Luego, imprime un mensaje que diga: 'Mi libro favorito es [libro_favorito] y tiene [paginas] páginas.'",
    "instructions": "Usa variables y la función print() con f-strings o concatenación.",
    "starter_code": "libro_favorito = \"\"\npaginas = 0\n# Tu código aquí",
    "solution_code": "libro_favorito = \"El Hobbit\"\npaginas = 300\nprint(f\"Mi libro favorito es {libro_favorito} y tiene {paginas} páginas.\")",
    "test_cases": "[{\"input\": \"\", \"output\": \"Mi libro favorito es El Hobbit y tiene 300 páginas.\\n\"}]"
  },
  {
    "id": 5,
    "lesson_id": 4,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.1.1: Operaciones Básicas",
    "description": "Calcula el resultado de `(15 + 5) * 2 / 4 - 1` e imprímelo.",
    "instructions": "Usa los operadores aritméticos y print().",
    "starter_code": "resultado = 0\n# Tu cálculo aquí\nprint(resultado)",
    "solution_code": "resultado = (15 + 5) * 2 / 4 - 1\nprint(resultado)",
    "test_cases": "[{\"input\": \"\", \"output\": \"9.0\\n\"}]"
  },
  {
    "id": 6,
    "lesson_id": 5,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.2.1: ¿Puede Conducir?",
    "description": "Define una variable `edad_usuario` = 17 y `tiene_permiso_padres` = True. Imprime `True` si el usuario puede conducir (mayor o igual a 18, O menor de 18 pero con permiso de padres), `False` en caso contrario.",
    "instructions": "Usa operadores de comparación y lógicos.",
    "starter_code": "edad_usuario = 17\ntiene_permiso_padres = True\npuede_conducir = False\n# Tu lógica aquí\nprint(puede_conducir)",
    "solution_code": "edad_usuario = 17\ntiene_permiso_padres = True\npuede_conducir = (edad_usuario >= 18) or (edad_usuario < 18 and tiene_permiso_padres)\nprint(puede_conducir)",
    "test_cases": "[{\"input\": \"\", \"output\": \"True\\n\"}]"
  },
  {
    "id": 7,
    "lesson_id": 6,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.3.1: Calculadora de Edad en Días",
    "description": "Pide al usuario su edad en años. Convierte la edad a días (asumiendo 365 días por año) e imprime el resultado.",
    "instructions": "Usa input() para obtener la edad, int() para convertirla, y print() para mostrar el resultado. Simula la entrada del usuario para el test.",
    "starter_code": "# edad_str = input(\"Ingresa tu edad en años: \")\n# Para testing, simulamos la entrada:\nedad_str = \"25\"\n# Tu código aquí",
    "solution_code": "edad_str = \"25\"\nedad_anios = int(edad_str)\nedad_dias = edad_anios * 365\nprint(f\"Tienes aproximadamente {edad_dias} días de vida.\")",
    "test_cases": "[{\"input\": \"25\", \"output\": \"Tienes aproximadamente 9125 días de vida.\\n\"}]"
  },
  {
    "id": 8,
    "lesson_id": 7,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.4.1: Iniciales y Longitud",
    "description": "Dada la variable `nombre_completo = \"Juan Perez\"`, imprime la primera letra del nombre, la primera letra del apellido y la longitud total del nombre completo.",
    "instructions": "Usa indexación para las iniciales y len() para la longitud. Imprime cada resultado en una nueva línea.",
    "starter_code": "nombre_completo = \"Juan Perez\"\n# Tu código aquí",
    "solution_code": "nombre_completo = \"Juan Perez\"\nprimera_letra_nombre = nombre_completo[0]\nprimera_letra_apellido = nombre_completo[5] # Asumiendo espacio entre nombre y apellido\nlongitud = len(nombre_completo)\nprint(primera_letra_nombre)\nprint(primera_letra_apellido)\nprint(longitud)",
    "test_cases": "[{\"input\": \"\", \"output\": \"J\\nP\\n10\\n\"}]"
  },
  {
    "id": 9,
    "lesson_id": null,
    "module_id": 2,
    "order_index": 99,
    "title": "Test Módulo 2: Operaciones",
    "description": "Pide al usuario un número. Luego, imprime si el número es mayor que 10 Y menor que 20.",
    "instructions": "Usa input(), int(), operadores de comparación, el operador lógico 'and', y print(). Simula la entrada del usuario para el test.",
    "starter_code": "# numero_str = input(\"Ingresa un número: \")\n# Para testing, simulamos la entrada:\nnumero_str = \"15\"\n# Tu código aquí",
    "solution_code": "numero_str = \"15\"\nnumero = int(numero_str)\nes_valido = numero > 10 and numero < 20\nprint(es_valido)",
    "test_cases": "[{\"input\": \"15\", \"output\": \"True\\n\"}]"
  },
  {
    "id": 10,
    "lesson_id": 8,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.1.1: Par o Impar",
    "description": "Dado un número `numero = 7`, imprime \"Par\" si es par, o \"Impar\" si es impar.",
    "instructions": "Usa el operador módulo (%) y sentencias if/else.",
    "starter_code": "numero = 7\n# Tu código aquí",
    "solution_code": "numero = 7\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
    "test_cases": "[{\"input\": \"\", \"output\": \"Impar\\n\"}]"
  },
  {
    "id": 11,
    "lesson_id": 9,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.2.1: Suma con For",
    "description": "Calcula la suma de los números del 1 al 5 (inclusive) usando un bucle `for` e imprime el resultado.",
    "instructions": "Inicializa una variable suma, usa range() en el bucle for.",
    "starter_code": "suma_total = 0\n# Tu bucle aquí\nprint(suma_total)",
    "solution_code": "suma_total = 0\nfor i in range(1, 6):\n    suma_total = suma_total + i\nprint(suma_total)",
    "test_cases": "[{\"input\": \"\", \"output\": \"15\\n\"}]"
  },
  {
    "id": 12,
    "lesson_id": 10,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.3.1: Lista de Compras",
    "description": "Crea una lista `compras` con \"manzanas\", \"pan\", \"leche\". Añade \"huevos\" a la lista. Luego, imprime el segundo elemento de la lista.",
    "instructions": "Define la lista, usa append(), y luego imprime el elemento con el índice correcto.",
    "starter_code": "compras = []\n# Tu código aquí",
    "solution_code": "compras = [\"manzanas\", \"pan\", \"leche\"]\ncompras.append(\"huevos\")\nprint(compras[1])",
    "test_cases": "[{\"input\": \"\", \"output\": \"pan\\n\"}]"
  },
  {
    "id": 13,
    "lesson_id": 11,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.4.1: Función Área Rectángulo",
    "description": "Define una función `area_rectangulo(base, altura)` que devuelva el área. Llama a la función con base 4 y altura 6, e imprime el resultado.",
    "instructions": "Usa def para la función, return para el valor, y luego llama a la función dentro de print().",
    "starter_code": "# Define tu función aquí\n\n# Llama a la función e imprime el resultado aquí",
    "solution_code": "def area_rectangulo(base, altura):\n    return base * altura\n\nresultado_area = area_rectangulo(4, 6)\nprint(resultado_area)",
    "test_cases": "[{\"input\": \"\", \"output\": \"24\\n\"}]"
  },
  {
    "id": 14,
    "lesson_id": null,
    "module_id": 3,
    "order_index": 99,
    "title": "Test Módulo 3: Control y Estructuras",
    "description": "Escribe una función `contar_mayores_que_diez(lista_numeros)` que reciba una lista de números y devuelva cuántos de ellos son mayores que 10. Prueba con la lista `[5, 12, 3, 18, 9, 22]`.",
    "instructions": "Define la función, usa un bucle for, una sentencia if dentro del bucle, y un contador.",
    "starter_code": "def contar_mayores_que_diez(lista_numeros):\n    contador = 0\n    # Tu código aquí\n    return contador\n\nmi_lista = [5, 12, 3, 18, 9, 22]\n# Llama a la función e imprime el resultado",
    "solution_code": "def contar_mayores_que_diez(lista_numeros):\n    contador = 0\n    for numero in lista_numeros:\n        if numero > 10:\n            contador += 1\n    return contador\n\nmi_lista = [5, 12, 3, 18, 9, 22]\nresultado_conteo = contar_mayores_que_diez(mi_lista)\nprint(resultado_conteo)",
    "test_cases": "[{\"input\": \"\", \"output\": \"3\\n\"}]"
  }
]
