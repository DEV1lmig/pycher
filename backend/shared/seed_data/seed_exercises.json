[
  {
    "id": 1,
    "lesson_id": 1,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.1.1: ¿Qué es Python?",
    "description": "Responde: ¿Cuál es una de las principales razones por las que Python es popular para principiantes?",
    "instructions": "1. Tu objetivo es imprimir una frase específica en la consola.\n2. Utiliza la función `print()` de Python para esta tarea.\n3. La frase exacta que debes imprimir es: `Su sintaxis es clara y legible`.\n4. Asegúrate de que esta frase esté encerrada entre comillas (simples `'` o dobles `\"`) para que Python la interprete como un string (texto).\n   Por ejemplo: `print(\"Texto de ejemplo\")`.",
    "starter_code": "# Utiliza la función print() para mostrar la respuesta exacta.\nprint(\"...\")",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "Su sintaxis es clara y legible\n",
      "strict_whitespace": true,
      "case_sensitive": true,
      "custom_feedback": {
        "missing_newline": "Recuerda terminar tu print con un salto de línea.",
        "wrong_case": "Revisa las mayúsculas y minúsculas.",
        "extra_spaces": "No agregues espacios extra al final o inicio."
      }
    }
  },
  {
    "id": 2,
    "lesson_id": 2,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.2.1: Saludo Personalizado",
    "description": "Escribe un programa que lea un nombre y luego imprima '¡Hola, [Nombre]!' en pantalla, reemplazando [Nombre] con el nombre leído.",
    "instructions": "1. Utiliza la función `input()` para leer un nombre que será proporcionado por el sistema. No necesitas mostrar un mensaje dentro de `input()` (ej. `nombre = input()` es suficiente).\n2. Almacena el nombre leído en una variable llamada `nombre`.\n3. Utiliza la función `print()` para mostrar el saludo.\n4. Para incluir el valor de tu variable `nombre` dentro del mensaje, puedes usar un f-string. El formato del mensaje debe ser: `¡Hola, [valor de la variable nombre]!`.\n   Ejemplo de cómo usar un f-string: `print(f\"¡Hola, {nombre}!\")`.\n5. Asegúrate de que la salida final sea exactamente como se espera, incluyendo los signos de exclamación.",
    "starter_code": "nombre = input()\nprint(f\"¡Hola, {nombre}!\")",
    "validation_type": "saludo_personalizado",
    "validation_rules": {
      "requires_input_function": true,
      "output_format_template": "¡Hola, {var}!",
      "submission_test_strategy": {
        "type": "generated_inputs",
        "count": 3,
        "input_constraints": {
          "type": "string",
          "min_length": 3,
          "max_length": 10,
          "charset": "alpha"
        }
      },
      "strict_variable_name": "nombre",
      "require_fstring": true,
      "custom_feedback": {
        "missing_input": "Debes usar la función input() para leer el nombre.",
        "wrong_variable": "La variable debe llamarse 'nombre'.",
        "not_fstring": "Usa un f-string para imprimir el saludo."
      }
    },
    "difficulty": "Fácil",
    "estimated_time_minutes": 5,
    "tags": ["input", "print", "f-strings", "variables"]
  },
  {
    "id": 3,
    "lesson_id": 3,
    "module_id": 1,
    "order_index": 1,
    "title": "Ejercicio 1.3.1: Variables y Tipos",
    "description": "Crea una variable `ciudad` con el valor \"Madrid\" y una variable `poblacion` con el valor 3300000. Imprime ambas variables, cada una en una nueva línea.",
    "instructions": "1. Define una variable llamada `ciudad` y asígnale el valor de string \"Madrid\".\n2. Define otra variable llamada `poblacion` y asígnale el valor numérico (entero) 3300000.\n3. Utiliza la función `print()` para mostrar el valor de la variable `ciudad` en la consola.\n4. En una línea separada, utiliza nuevamente la función `print()` para mostrar el valor de la variable `poblacion`.",
    "starter_code": "# 1. Define la variable ciudad\n\n# 2. Define la variable poblacion\n\n# 3. Imprime la variable ciudad\n\n# 4. Imprime la variable poblacion",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "Madrid\n3300000\n",
      "strict_variable_names": ["ciudad", "poblacion"],
      "expected_types": ["str", "int"],
      "strict_whitespace": true,
      "case_sensitive": true,
      "custom_feedback": {
        "wrong_type": "Verifica que 'ciudad' sea string y 'poblacion' sea int.",
        "wrong_variable": "Debes usar los nombres de variable exactos: 'ciudad' y 'poblacion'."
      }
    }
  },
  {
    "id": 4,
    "lesson_id": 4,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.1.1: Operaciones Básicas",
    "description": "Calcula el resultado de la expresión matemática (15 + 5) * 2 / 4 - 1 e imprímelo en la consola.",
    "instructions": "Escribe la expresión matemática directamente en tu código y usa print para mostrar el resultado.",
    "starter_code": "resultado_calculo = 0\nprint(resultado_calculo)",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "9.0\n",
      "expected_types": ["float"],
      "strict_variable_names": ["resultado_calculo"],
      "strict_whitespace": true,
      "case_sensitive": true,
      "custom_feedback": {
        "wrong_type": "El resultado debe ser un número decimal (float).",
        "wrong_variable": "La variable debe llamarse 'resultado_calculo'."
      }
    }
  },
  {
    "id": 5,
    "lesson_id": 5,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.2.1: ¿Puede Conducir?",
    "description": "Dadas las variables edad_usuario y tiene_permiso_padres, determina si el usuario puede conducir. Imprime True si puede conducir, o False en caso contrario.",
    "instructions": "Usa operadores lógicos y asigna el resultado a la variable puede_conducir. Imprime el resultado.",
    "starter_code": "edad_usuario = 17\ntiene_permiso_padres = True\npuede_conducir = False\nprint(puede_conducir)",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "True\n",
      "expected_types": ["bool"],
      "strict_variable_names": ["puede_conducir"],
      "strict_whitespace": true,
      "case_sensitive": true,
      "custom_feedback": {
        "wrong_type": "El resultado debe ser booleano (True o False).",
        "wrong_variable": "La variable debe llamarse 'puede_conducir'."
      }
    }
  },
  {
    "id": 6,
    "lesson_id": 6,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.3.1: Calculadora de Edad en Días",
    "description": "Convierte la edad en años a días y muestra el resultado en el formato 'Tienes aproximadamente [X] días de vida.'.",
    "instructions": "Convierte edad_str a entero, calcula los días y usa un f-string para imprimir el mensaje.",
    "starter_code": "edad_str = \"25\"\nedad_anios = 0\nedad_dias = 0\n# print(f\"...\")",
    "validation_type": "saludo_personalizado",
    "validation_rules": {
      "target_variable_names": ["edad_anios", "edad_dias"],
      "output_format_template": "Tienes aproximadamente {var} días de vida.",
      "requires_input_function": false,
      "input_variable_in_starter": {"name": "edad_str", "type": "int", "transform_for_template": "value * 365"},
      "scenarios": [
        {"input": "25", "description": "Edad 25"},
        {"input": "0", "description": "Edad 0"},
        {"input": "10", "description": "Edad 10"}
      ],
      "expected_types": ["int", "int"],
      "require_fstring": true,
      "custom_feedback": {
        "wrong_type": "Las variables deben ser enteros.",
        "not_fstring": "Usa un f-string para imprimir el mensaje."
      }
    }
  },
  {
    "id": 7,
    "lesson_id": 7,
    "module_id": 2,
    "order_index": 1,
    "title": "Ejercicio 2.4.1: Iniciales y Longitud",
    "description": "Dada la variable nombre_completo, imprime la primera letra del nombre, la primera letra del apellido y la longitud total del nombre completo, cada resultado en una nueva línea.",
    "instructions": "Accede a los caracteres y usa len(). Imprime cada resultado en una línea.",
    "starter_code": "nombre_completo = \"Juan Perez\"\n# ...",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "J\nP\n10\n",
      "expected_types": ["str", "str", "int"],
      "strict_variable_names": ["nombre_completo"],
      "strict_whitespace": true,
      "case_sensitive": true
    }
  },
  {
    "id": 8,
    "lesson_id": 8,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.1.1: Par o Impar",
    "description": "Dado un número, imprime 'Par' si el número es par, o 'Impar' si es impar.",
    "instructions": "Convierte numero_str a entero, usa if-else y print.",
    "starter_code": "numero_str = \"7\"\nnumero = int(numero_str)\n# ...",
    "validation_type": "saludo_personalizado",
    "validation_rules": {
      "output_format_template": "{var}\n",
      "requires_input_function": false,
      "input_variable_in_starter": {"name": "numero_str", "type": "str", "transform_for_template": "'Par' if int(value) % 2 == 0 else 'Impar'"},
      "scenarios": [
        {"input": "7", "description": "Número 7"},
        {"input": "4", "description": "Número 4"},
        {"input": "0", "description": "Número 0"}
      ],
      "expected_types": ["str"],
      "strict_whitespace": true,
      "case_sensitive": true
    }
  },
  {
    "id": 9,
    "lesson_id": 9,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.2.1: Suma con For",
    "description": "Calcula la suma de todos los números enteros desde 1 hasta 5 utilizando un bucle for. Imprime el resultado.",
    "instructions": "Usa un bucle for y suma_total. Imprime el resultado.",
    "starter_code": "suma_total = 0\n# ...\nprint(suma_total)",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "15\n",
      "expected_types": ["int"],
      "strict_variable_names": ["suma_total"],
      "strict_whitespace": true,
      "case_sensitive": true
    }
  },
  {
    "id": 10,
   "lesson_id": 10,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.3.1: Lista de Compras",
    "description": "Crea una lista llamada compras, añade 'huevos' y muestra el segundo elemento.",
    "instructions": "Define la lista, usa append y print.",
    "starter_code": "compras = []\n# ...",
    "validation_type": "simple_print",
    "validation_rules": {
      "expected_exact_output": "pan\n",
      "expected_types": ["str"],
      "strict_variable_names": ["compras"],
      "strict_whitespace": true,
      "case_sensitive": true
    }
  },
  {
    "id": 11,
    "lesson_id": 11,
    "module_id": 3,
    "order_index": 1,
    "title": "Ejercicio 3.4.1: Función Área Rectángulo",
    "description": "Define una función area_rectangulo que acepte dos argumentos y devuelva el área.",
    "instructions": "Define la función, llama con base=4 y altura=6, imprime el resultado.",
    "starter_code": "def area_rectangulo(base, altura):\n    # ...\n# ...",
    "validation_type": "function_check",
    "validation_rules": {
      "function_name": "area_rectangulo",
      "scenarios": [
        {"args": [4, 6], "expected_return_value": 24, "expected_return_type": "int"},
        {"args": [10, 5], "expected_return_value": 50, "expected_return_type": "int"},
        {"args": [1, 1], "expected_return_value": 1, "expected_return_type": "int"}
      ],
      "run_whole_script_and_check_output": "24\n",
      "require_return_statement": true
    }
  },
  {
  "id": 12,
  "lesson_id": null,
  "module_id": null,
  "order_index": 999,
  "title": "Examen Final: Fundamentos de Python",
  "description": "Resuelve los siguientes ejercicios para demostrar tus conocimientos de variables, tipos, condicionales, bucles, listas y funciones en Python.",
  "instructions": "1. Implementa todas las funciones y tareas solicitadas.\n2. Cada función debe tener el nombre exacto indicado y cumplir con los tipos de entrada y salida especificados.\n3. Lee cuidadosamente cada consigna y asegúrate de que tu código pase todos los casos de prueba.",
  "starter_code": "def es_par(n):\n    # Tu código aquí\n\n\ndef dias_en_anios(anios):\n    # Tu código aquí\n\n\ndef obtener_segundo(lista):\n    # Tu código aquí\n\n\ndef suma_rango(inicio, fin):\n    # Tu código aquí\n\n# Puedes agregar más funciones si lo deseas.",
  "validation_type": "exam",
  "validation_rules": {
    "functions": [
      {
        "function_name": "es_par",
        "scenarios": [
          {"args": [2], "expected_return_value": true, "expected_return_type": "bool"},
          {"args": [3], "expected_return_value": false, "expected_return_type": "bool"},
          {"args": [0], "expected_return_value": true, "expected_return_type": "bool"}
        ]
      },
      {
        "function_name": "dias_en_anios",
        "scenarios": [
          {"args": [1], "expected_return_value": 365, "expected_return_type": "int"},
          {"args": [0], "expected_return_value": 0, "expected_return_type": "int"},
          {"args": [10], "expected_return_value": 3650, "expected_return_type": "int"}
        ]
      },
      {
        "function_name": "obtener_segundo",
        "scenarios": [
          {"args": [[1,2,3]], "expected_return_value": 2, "expected_return_type": "int"},
          {"args": [["a","b","c"]], "expected_return_value": "b", "expected_return_type": "str"}
        ]
      },
      {
        "function_name": "suma_rango",
        "scenarios": [
          {"args": [1, 5], "expected_return_value": 15, "expected_return_type": "int"},
          {"args": [3, 3], "expected_return_value": 3, "expected_return_type": "int"},
          {"args": [0, 2], "expected_return_value": 3, "expected_return_type": "int"}
        ]
      }
    ],
    "require_return_statement": true,
    "strict_function_names": ["es_par", "dias_en_anios", "obtener_segundo", "suma_rango"]
  }
}
]
