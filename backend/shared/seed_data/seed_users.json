[
  {
    "user_info": {
      "id": 101,
      "username": "user_beginner",
      "email": "beginner@pycher.com",
      "password": "password123",
      "first_name": "Beginner",
      "last_name": "User"
    },
    "enrollments": [
      {
        "user_id": 101,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 25.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 101,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 101,
        "module_id": 2,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 101,
        "module_id": 3,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 101,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 101,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 101,
        "lesson_id": 3,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 101,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 101,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Madrid\"\npoblacion = 3300000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 101,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 102,
      "username": "user_intermediate",
      "email": "intermediate@pycher.com",
      "password": "password123",
      "first_name": "Intermediate",
      "last_name": "User"
    },
    "enrollments": [
      {
        "user_id": 102,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 50.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 102,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 102,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 102,
        "module_id": 3,
        "is_completed": false,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 102,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 102,
        "lesson_id": 7,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 102,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Madrid\"\npoblacion = 3300000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 102,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 103,
      "username": "user_advanced",
      "email": "advanced@pycher.com",
      "password": "password123",
      "first_name": "Advanced",
      "last_name": "User"
    },
    "enrollments": [
      {
        "user_id": 103,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 90.0,
        "exam_unlocked": true,
        "is_active": true
      }
    ],
    "module_progress": [
      {
        "user_id": 103,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 103,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 103,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 103,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 103,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 103,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Madrid\"\npoblacion = 3300000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\ncontador = 0\nfor letra in palabra:\n    if letra in vocales:\n        contador += 1\nprint(contador)",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 103,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    return (celsius * 9/5) + 32\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 104,
      "username": "user_pro",
      "email": "pro@pycher.com",
      "password": "password123",
      "first_name": "Pro",
      "last_name": "User"
    },
    "enrollments": [
      {
        "user_id": 104,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 104,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 104,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 95.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 104,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 4,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 8,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 104,
        "module_id": 12,
        "is_completed": false,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 104,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 104,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 104,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen 1 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 29,
        "lesson_id": 24,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 30,
        "lesson_id": 25,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 31,
        "lesson_id": 26,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 32,
        "lesson_id": 27,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 33,
        "lesson_id": 28,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 34,
        "lesson_id": 29,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 35,
        "lesson_id": 30,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 104,
        "exercise_id": 36,
        "lesson_id": 31,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 105,
      "username": "exam_ready_course1_user1",
      "email": "exam_ready_course1_user1@pycher.com",
      "password": "password123",
      "first_name": "ExamReady1",
      "last_name": "User1"
    },
    "enrollments": [
      {
        "user_id": 105,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 105,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 105,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 105,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 105,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 105,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 105,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Madrid\"\npoblacion = 3300000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\ncontador = 0\nfor letra in palabra:\n    if letra in vocales:\n        contador += 1\nprint(contador)",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 105,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    return (celsius * 9/5) + 32\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 106,
      "username": "exam_ready_course1_user2",
      "email": "exam_ready_course1_user2@pycher.com",
      "password": "password123",
      "first_name": "ExamReady1",
      "last_name": "User2"
    },
    "enrollments": [
      {
        "user_id": 106,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 106,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 106,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 106,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 106,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 106,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 106,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Barcelona\"\npoblacion = 1620000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\ncontador = 0\nfor letra in palabra:\n    if letra in vocales:\n        contador += 1\nprint(contador)",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 106,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    return (celsius * 9/5) + 32\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 107,
      "username": "exam_ready_course1_user3",
      "email": "exam_ready_course1_user3@pycher.com",
      "password": "password123",
      "first_name": "ExamReady1",
      "last_name": "User3"
    },
    "enrollments": [
      {
        "user_id": 107,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 107,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 107,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 107,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 107,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 107,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 107,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Valencia\"\npoblacion = 800000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\ncontador_vocales = 0\nfor caracter in palabra:\n    if caracter in vocales:\n        contador_vocales += 1\nprint(contador_vocales)",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 107,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    fahrenheit = (celsius * 9/5) + 32\n    return fahrenheit\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 108,
      "username": "exam_ready_course1_user4",
      "email": "exam_ready_course1_user4@pycher.com",
      "password": "password123",
      "first_name": "ExamReady1",
      "last_name": "User4"
    },
    "enrollments": [
      {
        "user_id": 108,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 108,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 108,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 108,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 108,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 108,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 108,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Sevilla\"\npoblacion = 690000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\ncontador = 0\nfor letra in palabra:\n    if letra in vocales:\n        contador += 1\nprint(contador)",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 108,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    return (celsius * 9/5) + 32\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 109,
      "username": "exam_ready_course1_user5",
      "email": "exam_ready_course1_user5@pycher.com",
      "password": "password123",
      "first_name": "ExamReady1",
      "last_name": "User5"
    },
    "enrollments": [
      {
        "user_id": 109,
        "course_id": 1,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 109,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 109,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 109,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 109,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 109,
        "lesson_id": 11,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 109,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print(\"Su sintaxis es clara y legible\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "ciudad = \"Bilbao\"\npoblacion = 345000\nprint(ciudad)\nprint(poblacion)",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "largo = 10\nancho = 5\narea = largo * ancho\nprint(f\"El \u00e1rea de un rect\u00e1ngulo de {largo}x{ancho} es {area}.\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "nombre = input()\nprint(f\"\u00a1Hola, {nombre}!\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "edad_en_texto = input()\nedad_en_numero = int(edad_en_texto)\nedad_en_dias = edad_en_numero * 365\nprint(f\"Tienes aproximadamente {edad_en_dias} d\u00edas de vida.\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "edad_usuario = 22\ntiene_permiso_padres = False\npuede_alquilar = edad_usuario >= 25 or (edad_usuario >= 21 and tiene_permiso_padres)\nprint(puede_alquilar)",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "numero = int(input())\nif numero % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"Impar\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "contador = 5\nwhile contador > 0:\n    print(contador)\n    contador -= 1\nprint(\"\u00a1Despegue!\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "palabra = input()\nvocales = 'aeiouAEIOU'\nnum_vocales = 0\nfor char in palabra:\n    if char in vocales:\n        num_vocales += 1\nprint(num_vocales)",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "lista_compra = [\"leche\", \"pan\", \"huevos\"]\nproducto_buscado = input()\nif producto_buscado in lista_compra:\n    print(\"S\u00ed, est\u00e1 en la lista\")\nelse:\n    print(\"No, hay que a\u00f1adirlo\")",
        "attempt_number": 1
      },
      {
        "user_id": 109,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "def convertir_a_fahrenheit(celsius):\n    resultado = (celsius * 9/5) + 32\n    return resultado\n\ntemp_celsius = float(input())\ntemp_fahrenheit = convertir_a_fahrenheit(temp_celsius)\nprint(temp_fahrenheit)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 110,
      "username": "exam_ready_course2_user1",
      "email": "exam_ready_course2_user1@pycher.com",
      "password": "password123",
      "first_name": "ExamReady2",
      "last_name": "User1"
    },
    "enrollments": [
      {
        "user_id": 110,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 110,
        "course_id": 2,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 110,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 0.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 110,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 9,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 110,
        "module_id": 10,
        "is_completed": false,
        "is_unlocked": false
      },
      {
        "user_id": 110,
        "module_id": 11,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 110,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 110,
        "lesson_id": 23,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 110,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "dias = (\"lunes\", \"martes\", \"mi\u00e9rcoles\", \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\")\nprint(dias[0])\nprint(dias[-1])\nprint(dias[3])",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "conjunto1 = {1, 2, 3, 2, 4}\nconjunto2 = {3, 4, 5, 5}\nprint(conjunto1 | conjunto2)\nprint(conjunto1 & conjunto2)\nconjunto1.remove(2)\nprint(conjunto1)",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "mascota = {\n    \"nombre\": \"Rocky\",\n    \"tipo\": \"perro\",\n    \"edad\": 5\n}\nmascota[\"vacunado\"] = True\nmascota[\"edad\"] = 6\nfor clave, valor in mascota.items():\n    print(f\"{clave}: {valor}\")",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "datos = [\n    [\"Ana\", \"Luis\", \"Carlos\"],\n    [\"Mar\u00eda\", \"Jorge\", \"Sof\u00eda\"],\n    [\"Pedro\", \"Luc\u00eda\", \"Elena\"]\n]\nfor fila in datos:\n    for nombre in fila:\n        print(nombre, end=\" \")\n    print()",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "equipos = {\n    \"futbol\": [\"Messi\", \"Ronaldo\", \"Neymar\"],\n    \"basquet\": [\"LeBron\", \"Curry\", \"Durant\"],\n    \"voley\": [\"Anderson\", \"Ngapeth\", \"Zaytsev\"]\n}\nprint(equipos[\"basquet\"])",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "productos = {\n    \"frutas\": [\"manzana\", \"pera\", \"banana\"],\n    \"verduras\": [\"zanahoria\", \"lechuga\", \"tomate\"]\n}\nfor categoria, lista_productos in productos.items():\n    print(f\"Categor\u00eda: {categoria}\")\n    for producto in lista_productos:\n        print(f\" - {producto}\")",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "titulo = \"informe\"\nversion = \"v1\"\nnombre_archivo = titulo + \"_\" + version + \".txt\"\nprint(nombre_archivo)",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "numero = input(\"Ingrese un n\u00famero: \")\ntry:\n    num = int(numero)\n    print(f\"El n\u00famero es: {num}\")\nexcept ValueError:\n    print(\"Error: No ingresaste un n\u00famero v\u00e1lido.\")",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    dividendo = int(input(\"Ingrese el dividendo: \"))\n    divisor = int(input(\"Ingrese el divisor: \"))\n    resultado = dividendo / divisor\n    print(f\"Resultado: {resultado}\")\nexcept ValueError:\n    print(\"Error: Debes ingresar un n\u00famero v\u00e1lido.\")\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir entre cero.\")",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "try:\n    numero = int(input(\"Ingrese un n\u00famero: \"))\n    if numero < 0:\n        raise ValueError(\"El n\u00famero no puede ser negativo.\")\n    print(f\"N\u00famero v\u00e1lido: {numero}\")\nexcept ValueError as e:\n    print(f\"Error: {e}\")\nfinally:\n    print(\"Proceso finalizado.\")",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "frutas = ['manzana', 'pera', 'banana', 'kiwi', 'sand\u00eda']\nlongitudes = []\nfor fruta in frutas:\n    longitudes.append(len(fruta))\nfrutas_largas = [fruta for fruta in frutas if len(fruta) > 5]\nlongitudes_largas = [len(fruta) for fruta in frutas if len(fruta) > 5]\nprint(longitudes)\nprint(frutas_largas)\nprint(longitudes_largas)",
        "attempt_number": 1
      },
      {
        "user_id": 110,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "nombres = [\"Ana\", \"luis\", \"Carlos\", \"maria\"]\nnombres_ordenados = sorted(nombres, key=lambda x: x.lower())\nprint(nombres_ordenados)\nnumeros = [1, 2, 3, 4, 5, 6]\nnumeros_pares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(numeros_pares)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 111,
      "username": "exam_ready_course2_user2",
      "email": "exam_ready_course2_user2@pycher.com",
      "password": "password123",
      "first_name": "ExamReady2",
      "last_name": "User2"
    },
    "enrollments": [
      {
        "user_id": 111,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 111,
        "course_id": 2,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 111,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 0.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 111,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 9,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 111,
        "module_id": 10,
        "is_completed": false,
        "is_unlocked": false
      },
      {
        "user_id": 111,
        "module_id": 11,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 111,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 111,
        "lesson_id": 23,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 111,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "# Tupla con d\u00edas de la semana\ndias = (\"lunes\", \"martes\", \"mi\u00e9rcoles\", \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\")\n# Primer d\u00eda\nprint(dias[0])\n# \u00daltimo d\u00eda\nprint(dias[-1])\n# D\u00eda en posici\u00f3n 3\nprint(dias[3])",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "# Sets con elementos \u00fanicos\nconjunto1 = {1, 2, 3, 2, 4}\nconjunto2 = {3, 4, 5, 5}\n# Uni\u00f3n de conjuntos\nprint(conjunto1 | conjunto2)\n# Intersecci\u00f3n\nprint(conjunto1 & conjunto2)\n# Eliminar elemento\nconjunto1.remove(2)\nprint(conjunto1)",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "# Diccionario de mascota\nmascota = {\n    \"nombre\": \"Luna\",\n    \"tipo\": \"gato\",\n    \"edad\": 3\n}\n# Agregar nueva clave\nmascota[\"vacunado\"] = True\n# Modificar edad\nmascota[\"edad\"] = 4\n# Recorrer diccionario\nfor clave, valor in mascota.items():\n    print(f\"{clave}: {valor}\")",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "# Matriz de nombres\ndatos = [\n    [\"Ana\", \"Luis\", \"Carlos\"],\n    [\"Mar\u00eda\", \"Jorge\", \"Sof\u00eda\"],\n    [\"Pedro\", \"Luc\u00eda\", \"Elena\"]\n]\n# Recorrer con bucles anidados\nfor fila in datos:\n    for nombre in fila:\n        print(nombre, end=\" \")\n    print()  # Nueva l\u00ednea despu\u00e9s de cada fila",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "# Diccionario de equipos deportivos\nequipos = {\n    \"futbol\": [\"Messi\", \"Ronaldo\", \"Mbapp\u00e9\"],\n    \"basquet\": [\"Jordan\", \"Kobe\", \"LeBron\"],\n    \"voley\": [\"Wilfredo\", \"Le\u00f3n\", \"Conte\"]\n}\n# Mostrar equipo de basquet\nprint(equipos[\"basquet\"])",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "# Productos por categor\u00eda\nproductos = {\n    \"frutas\": [\"manzana\", \"pera\", \"naranja\"],\n    \"verduras\": [\"zanahoria\", \"lechuga\", \"br\u00f3coli\"]\n}\n# Recorrer estructura anidada\nfor categoria, lista_productos in productos.items():\n    print(f\"Categor\u00eda: {categoria}\")\n    for producto in lista_productos:\n        print(f\" - {producto}\")",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "# Variables para nombre de archivo\ntitulo = \"reporte\"\nversion = \"v2\"\n# Crear nombre de archivo\nnombre_archivo = titulo + \"_\" + version + \".txt\"\nprint(nombre_archivo)",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "# Manejo de errores en conversi\u00f3n\nnumero = input(\"Ingrese un n\u00famero: \")\ntry:\n    num_convertido = int(numero)\n    print(f\"El n\u00famero es: {num_convertido}\")\nexcept ValueError:\n    print(\"Error: No ingresaste un n\u00famero v\u00e1lido.\")",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "# Divisi\u00f3n con manejo de errores\ntry:\n    dividendo = int(input(\"Ingrese el dividendo: \"))\n    divisor = int(input(\"Ingrese el divisor: \"))\n    resultado = dividendo / divisor\n    print(f\"Resultado: {resultado}\")\nexcept ValueError:\n    print(\"Error: Debes ingresar un n\u00famero v\u00e1lido.\")\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir entre cero.\")",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "# Validaci\u00f3n con raise y finally\ntry:\n    numero = int(input(\"Ingrese un n\u00famero: \"))\n    if numero < 0:\n        raise ValueError(\"No se permiten n\u00fameros negativos.\")\n    print(f\"N\u00famero v\u00e1lido ingresado: {numero}\")\nexcept ValueError as error:\n    print(f\"Error: {error}\")\nfinally:\n    print(\"Proceso finalizado.\")",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "# Lista de frutas\nfrutas = ['manzana', 'pera', 'banana', 'kiwi', 'sand\u00eda']\n# Con bucle for tradicional\nlongitudes = []\nfor fruta in frutas:\n    longitudes.append(len(fruta))\n# Con list comprehension\nfrutas_largas = [fruta for fruta in frutas if len(fruta) > 5]\nlongitudes_largas = [len(fruta) for fruta in frutas if len(fruta) > 5]\n# Imprimir resultados\nprint(longitudes)\nprint(frutas_largas)\nprint(longitudes_largas)",
        "attempt_number": 1
      },
      {
        "user_id": 111,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "# Ordenar nombres con lambda\nnombres = [\"Ana\", \"luis\", \"Carlos\", \"maria\"]\nnombres_ordenados = sorted(nombres, key=lambda nombre: nombre.lower())\nprint(nombres_ordenados)\n# Filtrar n\u00fameros pares\nnumeros = [1, 2, 3, 4, 5, 6]\npares = list(filter(lambda n: n % 2 == 0, numeros))\nprint(pares)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 112,
      "username": "exam_ready_course2_user3",
      "email": "exam_ready_course2_user3@pycher.com",
      "password": "password123",
      "first_name": "ExamReady2",
      "last_name": "User3"
    },
    "enrollments": [
      {
        "user_id": 112,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 112,
        "course_id": 2,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 112,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 0.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 112,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 9,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 112,
        "module_id": 10,
        "is_completed": false,
        "is_unlocked": false
      },
      {
        "user_id": 112,
        "module_id": 11,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 112,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 112,
        "lesson_id": 23,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 112,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "dias = (\"lunes\", \"martes\", \"mi\u00e9rcoles\", \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\")\nprint(dias[0])  # Primer d\u00eda\nprint(dias[-1])  # \u00daltimo d\u00eda\nprint(dias[3])  # Cuarto d\u00eda (\u00edndice 3)",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "conjunto1 = {1, 2, 3, 2, 4}  # Los duplicados se eliminan autom\u00e1ticamente\nconjunto2 = {3, 4, 5, 5}\nprint(conjunto1 | conjunto2)  # Uni\u00f3n\nprint(conjunto1 & conjunto2)  # Intersecci\u00f3n\nconjunto1.remove(2)  # Eliminar elemento\nprint(conjunto1)",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "mascota = {\n    \"nombre\": \"Max\",\n    \"tipo\": \"perro\",\n    \"edad\": 2\n}\nmascota[\"vacunado\"] = True  # Agregar nueva clave\nmascota[\"edad\"] = 3  # Modificar valor existente\nfor key, value in mascota.items():\n    print(f\"{key}: {value}\")",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "datos = [\n    [\"Ana\", \"Luis\", \"Carlos\"],\n    [\"Mar\u00eda\", \"Jorge\", \"Sof\u00eda\"],\n    [\"Pedro\", \"Luc\u00eda\", \"Elena\"]\n]\nfor fila in datos:\n    for nombre in fila:\n        print(nombre, end=\" \")\n    print()  # Salto de l\u00ednea al final de cada fila",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "equipos = {\n    \"futbol\": [\"Pel\u00e9\", \"Maradona\", \"Cruyff\"],\n    \"basquet\": [\"Magic\", \"Bird\", \"Shaq\"],\n    \"voley\": [\"Giba\", \"Dante\", \"Bernardinho\"]\n}\nprint(equipos[\"basquet\"])",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "productos = {\n    \"frutas\": [\"manzana\", \"pera\", \"uva\"],\n    \"verduras\": [\"zanahoria\", \"lechuga\", \"apio\"]\n}\nfor categoria, lista_productos in productos.items():\n    print(f\"Categor\u00eda: {categoria}\")\n    for producto in lista_productos:\n        print(f\" - {producto}\")",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "titulo = \"documento\"\nversion = \"final\"\nnombre_archivo = f\"{titulo}_{version}.txt\"\nprint(nombre_archivo)",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "numero = input(\"Ingrese un n\u00famero: \")\ntry:\n    numero_entero = int(numero)\n    print(f\"El n\u00famero es: {numero_entero}\")\nexcept ValueError:\n    print(\"Error: No ingresaste un n\u00famero v\u00e1lido.\")",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    dividendo = int(input(\"Ingrese el dividendo: \"))\n    divisor = int(input(\"Ingrese el divisor: \"))\n    resultado = dividendo / divisor\n    print(f\"Resultado: {resultado}\")\nexcept ValueError:\n    print(\"Error: Debes ingresar un n\u00famero v\u00e1lido.\")\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir entre cero.\")",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "try:\n    numero = int(input(\"Ingrese un n\u00famero: \"))\n    if numero < 0:\n        raise ValueError(\"Los n\u00fameros negativos no est\u00e1n permitidos.\")\n    print(f\"N\u00famero positivo ingresado: {numero}\")\nexcept ValueError as e:\n    print(f\"Error: {e}\")\nfinally:\n    print(\"Proceso finalizado.\")",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "frutas = ['manzana', 'pera', 'banana', 'kiwi', 'sand\u00eda']\n# M\u00e9todo tradicional con for\nlongitudes = []\nfor fruta in frutas:\n    longitudes.append(len(fruta))\nprint(longitudes)\n# List comprehensions\nfrutas_largas = [fruta for fruta in frutas if len(fruta) > 5]\nprint(frutas_largas)\nlongitudes_largas = [len(fruta) for fruta in frutas if len(fruta) > 5]\nprint(longitudes_largas)",
        "attempt_number": 1
      },
      {
        "user_id": 112,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "nombres = [\"Ana\", \"luis\", \"Carlos\", \"maria\"]\nnombres_ordenados = sorted(nombres, key=lambda x: x.lower())\nprint(nombres_ordenados)\nnumeros = [1, 2, 3, 4, 5, 6]\nnumeros_pares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(numeros_pares)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 113,
      "username": "exam_ready_course2_user4",
      "email": "exam_ready_course2_user4@pycher.com",
      "password": "password123",
      "first_name": "ExamReady2",
      "last_name": "User4"
    },
    "enrollments": [
      {
        "user_id": 113,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 113,
        "course_id": 2,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 113,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 0.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 113,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 9,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 113,
        "module_id": 10,
        "is_completed": false,
        "is_unlocked": false
      },
      {
        "user_id": 113,
        "module_id": 11,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 113,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 113,
        "lesson_id": 23,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 113,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "# Crear tupla de d\u00edas\ndias = (\"lunes\", \"martes\", \"mi\u00e9rcoles\", \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\")\n# Acceso con \u00edndices\nprint(dias[0])   # Primer elemento\nprint(dias[-1])  # \u00daltimo elemento\nprint(dias[3])   # Elemento en posici\u00f3n 3",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "# Crear sets\nconjunto1 = {1, 2, 3, 2, 4}\nconjunto2 = {3, 4, 5, 5}\n# Operaciones de conjuntos\nunion = conjunto1 | conjunto2\ninterseccion = conjunto1 & conjunto2\nprint(union)\nprint(interseccion)\n# Eliminar elemento\nconjunto1.remove(2)\nprint(conjunto1)",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "# Diccionario inicial\nmascota = {\n    \"nombre\": \"Buddy\",\n    \"tipo\": \"perro\",\n    \"edad\": 4\n}\n# Agregar y modificar\nmascota[\"vacunado\"] = True\nmascota[\"edad\"] = 5\n# Recorrer e imprimir\nfor clave, valor in mascota.items():\n    print(f\"{clave}: {valor}\")",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "# Lista de listas (matriz)\ndatos = [\n    [\"Ana\", \"Luis\", \"Carlos\"],\n    [\"Mar\u00eda\", \"Jorge\", \"Sof\u00eda\"],\n    [\"Pedro\", \"Luc\u00eda\", \"Elena\"]\n]\n# Bucles anidados para recorrer\nfor fila in datos:\n    for nombre in fila:\n        print(nombre, end=\" \")\n    print()  # Nueva l\u00ednea despu\u00e9s de cada fila",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "# Diccionario con listas como valores\nequipos = {\n    \"futbol\": [\"Ronaldinho\", \"Kak\u00e1\", \"Zidane\"],\n    \"basquet\": [\"Kareem\", \"Wilt\", \"Russell\"],\n    \"voley\": [\"Renan\", \"Murilo\", \"Wallace\"]\n}\n# Acceder a equipo espec\u00edfico\nprint(equipos[\"basquet\"])",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "# Estructura anidada: diccionario de listas\nproductos = {\n    \"frutas\": [\"manzana\", \"pera\", \"kiwi\"],\n    \"verduras\": [\"zanahoria\", \"lechuga\", \"pepino\"]\n}\n# Recorrer estructura anidada\nfor categoria, lista_productos in productos.items():\n    print(f\"Categor\u00eda: {categoria}\")\n    for producto in lista_productos:\n        print(f\" - {producto}\")",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "# Crear nombre de archivo din\u00e1micamente\ntitulo = \"backup\"\nversion = \"2023\"\nnombre_archivo = titulo + \"_\" + version + \".txt\"\nprint(nombre_archivo)",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "# Manejo b\u00e1sico de errores\nnumero = input(\"Ingrese un n\u00famero: \")\ntry:\n    valor = int(numero)\n    print(f\"El n\u00famero es: {valor}\")\nexcept ValueError:\n    print(\"Error: No ingresaste un n\u00famero v\u00e1lido.\")",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "# Manejo de m\u00faltiples tipos de error\ntry:\n    dividendo = int(input(\"Ingrese el dividendo: \"))\n    divisor = int(input(\"Ingrese el divisor: \"))\n    resultado = dividendo / divisor\n    print(f\"Resultado: {resultado}\")\nexcept ValueError:\n    print(\"Error: Debes ingresar un n\u00famero v\u00e1lido.\")\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir entre cero.\")",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "# Validaci\u00f3n con raise y bloque finally\ntry:\n    numero = int(input(\"Ingrese un n\u00famero: \"))\n    if numero < 0:\n        raise ValueError(\"El n\u00famero debe ser positivo o cero.\")\n    print(f\"N\u00famero v\u00e1lido: {numero}\")\nexcept ValueError as error:\n    print(f\"Error: {error}\")\nfinally:\n    print(\"Proceso finalizado.\")",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "# Transformaci\u00f3n de listas\nfrutas = ['manzana', 'pera', 'banana', 'kiwi', 'sand\u00eda']\n# M\u00e9todo tradicional\nlongitudes = []\nfor fruta in frutas:\n    longitudes.append(len(fruta))\nprint(longitudes)\n# List comprehensions\nfrutas_largas = [fruta for fruta in frutas if len(fruta) > 5]\nprint(frutas_largas)\nlongitudes_largas = [len(fruta) for fruta in frutas if len(fruta) > 5]\nprint(longitudes_largas)",
        "attempt_number": 1
      },
      {
        "user_id": 113,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "# Funciones lambda para ordenar y filtrar\nnombres = [\"Ana\", \"luis\", \"Carlos\", \"maria\"]\n# Ordenar ignorando may\u00fasculas\nnombres_ordenados = sorted(nombres, key=lambda nombre: nombre.lower())\nprint(nombres_ordenados)\n# Filtrar n\u00fameros pares\nnumeros = [1, 2, 3, 4, 5, 6]\npares = list(filter(lambda num: num % 2 == 0, numeros))\nprint(pares)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 114,
      "username": "exam_ready_course2_user5",
      "email": "exam_ready_course2_user5@pycher.com",
      "password": "password123",
      "first_name": "ExamReady2",
      "last_name": "User5"
    },
    "enrollments": [
      {
        "user_id": 114,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 114,
        "course_id": 2,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 114,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 0.0,
        "is_active": true,
        "exam_unlocked": false
      }
    ],
    "module_progress": [
      {
        "user_id": 114,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 9,
        "is_completed": false,
        "is_unlocked": true
      },
      {
        "user_id": 114,
        "module_id": 10,
        "is_completed": false,
        "is_unlocked": false
      },
      {
        "user_id": 114,
        "module_id": 11,
        "is_completed": false,
        "is_unlocked": false
      }
    ],
    "lesson_progress": [
      {
        "user_id": 114,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 114,
        "lesson_id": 23,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 114,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "dias = (\"lunes\", \"martes\", \"mi\u00e9rcoles\", \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\")\nprint(dias[0])  # lunes\nprint(dias[-1])  # domingo\nprint(dias[3])  # jueves",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "conjunto1 = {1, 2, 3, 2, 4}\nconjunto2 = {3, 4, 5, 5}\nprint(conjunto1 | conjunto2)  # Uni\u00f3n\nprint(conjunto1 & conjunto2)  # Intersecci\u00f3n\nconjunto1.remove(2)\nprint(conjunto1)  # Conjunto modificado",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "mascota = {\n    \"nombre\": \"Toby\",\n    \"tipo\": \"gato\",\n    \"edad\": 1\n}\nmascota[\"vacunado\"] = True\nmascota[\"edad\"] = 2\nfor k, v in mascota.items():\n    print(f\"{k}: {v}\")",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "datos = [\n    [\"Ana\", \"Luis\", \"Carlos\"],\n    [\"Mar\u00eda\", \"Jorge\", \"Sof\u00eda\"],\n    [\"Pedro\", \"Luc\u00eda\", \"Elena\"]\n]\nfor fila in datos:\n    for nombre in fila:\n        print(nombre, end=\" \")\n    print()",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "equipos = {\n    \"futbol\": [\"Messi\", \"Cristiano\", \"Neymar\"],\n    \"basquet\": [\"LeBron\", \"Curry\", \"Giannis\"],\n    \"voley\": [\"Bruno\", \"Lucarelli\", \"Leal\"]\n}\nprint(equipos[\"basquet\"])",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "productos = {\n    \"frutas\": [\"manzana\", \"pera\", \"durazno\"],\n    \"verduras\": [\"zanahoria\", \"lechuga\", \"tomate\"]\n}\nfor categoria, lista_productos in productos.items():\n    print(f\"Categor\u00eda: {categoria}\")\n    for producto in lista_productos:\n        print(f\" - {producto}\")",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "titulo = \"proyecto\"\nversion = \"beta\"\nnombre_archivo = titulo + \"_\" + version + \".txt\"\nprint(nombre_archivo)",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "numero = input(\"Ingrese un n\u00famero: \")\ntry:\n    n = int(numero)\n    print(f\"El n\u00famero es: {n}\")\nexcept ValueError:\n    print(\"Error: No ingresaste un n\u00famero v\u00e1lido.\")",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    dividendo = int(input(\"Ingrese el dividendo: \"))\n    divisor = int(input(\"Ingrese el divisor: \"))\n    resultado = dividendo / divisor\n    print(f\"Resultado: {resultado}\")\nexcept ValueError:\n    print(\"Error: Debes ingresar un n\u00famero v\u00e1lido.\")\nexcept ZeroDivisionError:\n    print(\"Error: No se puede dividir entre cero.\")",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "try:\n    numero = int(input(\"Ingrese un n\u00famero: \"))\n    if numero < 0:\n        raise ValueError(\"No se aceptan n\u00fameros negativos.\")\n    print(f\"N\u00famero aceptado: {numero}\")\nexcept ValueError as e:\n    print(f\"Error: {e}\")\nfinally:\n    print(\"Proceso finalizado.\")",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "frutas = ['manzana', 'pera', 'banana', 'kiwi', 'sand\u00eda']\nlongitudes = []\nfor fruta in frutas:\n    longitudes.append(len(fruta))\nprint(longitudes)\nfrutas_largas = [fruta for fruta in frutas if len(fruta) > 5]\nprint(frutas_largas)\nlongitudes_largas = [len(fruta) for fruta in frutas if len(fruta) > 5]\nprint(longitudes_largas)",
        "attempt_number": 1
      },
      {
        "user_id": 114,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "nombres = [\"Ana\", \"luis\", \"Carlos\", \"maria\"]\nordenados = sorted(nombres, key=lambda x: x.lower())\nprint(ordenados)\nnumeros = [1, 2, 3, 4, 5, 6]\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(pares)",
        "attempt_number": 1
      }
    ]
  },
  {
    "user_info": {
      "id": 115,
      "username": "exam_ready_course3_user1",
      "email": "exam_ready_course3_user1@pycher.com",
      "password": "password123",
      "first_name": "ExamReady3",
      "last_name": "User1"
    },
    "enrollments": [
      {
        "user_id": 115,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 115,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 115,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 115,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 115,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 115,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 115,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 115,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "coordenadas = (40.7128, -74.0060)\nprint(f\"Lat: {coordenadas[0]}, Lon: {coordenadas[1]}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "numeros = {1, 2, 3, 2, 4}\nprint(f\"\u00danicos: {numeros}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "persona = {'nombre': 'Ana', 'edad': 25}\nprint(f\"Persona: {persona}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "matriz = [[1, 2], [3, 4]]\nfor fila in matriz:\n    print(fila)",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "grupos = {'A': ['Juan'], 'B': ['Ana']}\nprint(f\"Grupos: {grupos}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "datos = [['Ana', 85], ['Luis', 90]]\nfor nombre, nota in datos:\n    print(f\"{nombre}: {nota}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "try:\n    x = int('abc')\nexcept ValueError:\n    print('Error de conversi\u00f3n')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "try:\n    raise ValueError('Error personalizado')\nexcept ValueError as e:\n    print(f'Capturado: {e}')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    print('Procesando')\nfinally:\n    print('Limpieza')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "pares = [x for x in range(10) if x % 2 == 0]\nprint(f\"Pares: {pares}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "cuadrados = list(map(lambda x: x**2, [1, 2, 3]))\nprint(f\"Cuadrados: {cuadrados}\")",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "def contador():\n    for i in range(3):\n        yield i\n\nfor n in contador():\n    print(n)",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 29,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 30,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 31,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 32,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 33,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 115,
        "exercise_id": 34,
        "lesson_id": 23,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass\nclass Persona:\n    nombre: str\n    edad: int\n    \n    def es_mayor(self):\n        return self.edad >= 18\n\np = Persona(\"Ana\", 25)\nprint(f\"{p.nombre} es mayor: {p.es_mayor()}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 35,
        "lesson_id": 24,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Usuario:\n    nombre: str\n    activo: bool = False\n    \n    def activar(self):\n        return Usuario(self.nombre, True)\n\nusuario = Usuario(\"Carlos\")\nusuario_activo = usuario.activar()\nprint(f\"Original: {usuario}\")\nprint(f\"Activado: {usuario_activo}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 36,
        "lesson_id": 25,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Rectangulo:\n    largo: float\n    ancho: float\n    \n    @property\n    def area(self):\n        return self.largo * self.ancho\n\nrect = Rectangulo(10, 5)\nprint(f\"\u00c1rea: {rect.area}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 37,
        "lesson_id": 26,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def mi_decorador(func):\n    def wrapper():\n        print(\"Antes de la funci\u00f3n\")\n        func()\n        print(\"Despu\u00e9s de la funci\u00f3n\")\n    return wrapper\n\n@mi_decorador\ndef saluda():\n    print(\"\u00a1Hola!\")\n\nsaluda()"
      },
      {
        "user_id": 115,
        "exercise_id": 38,
        "lesson_id": 27,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def generar_numeros(maximo):\n    for i in range(maximo):\n        yield i\n\nfor num in generar_numeros(3):\n    print(f\"N\u00famero generado: {num}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 39,
        "lesson_id": 28,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "numeros = [1, 2, 3, 4, 5, 6]\n\n# Doble de cada n\u00famero\ndobles = list(map(lambda x: x * 2, numeros))\nprint(f\"Dobles: {dobles}\")\n\n# Solo n\u00fameros pares\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 40,
        "lesson_id": 29,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# Pipeline de datos\nnumeros = range(1, 11)\nimpares = filter(lambda x: x % 2 != 0, numeros)\ncuadrados = list(map(lambda x: x**2, impares))\nprint(f\"Cuadrados de impares: {cuadrados}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 41,
        "lesson_id": 30,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# List comprehension anidada para aplanar\nmatriz = [[1, 2], [3, 4], [5, 6]]\nplana = [elemento for fila in matriz for elemento in fila]\nprint(f\"Lista plana: {plana}\")"
      },
      {
        "user_id": 115,
        "exercise_id": 43,
        "lesson_id": 31,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "import re\n\ntexto = \"Contacto: juan@email.com y maria@test.org\"\npatron = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nemails = re.findall(patron, texto)\nprint(f\"Emails encontrados: {emails}\")"
      }
    ]
  },
  {
    "user_info": {
      "id": 116,
      "username": "exam_ready_course3_user2",
      "email": "exam_ready_course3_user2@pycher.com",
      "password": "password123",
      "first_name": "ExamReady3",
      "last_name": "User2"
    },
    "enrollments": [
      {
        "user_id": 116,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 116,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 116,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 116,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 116,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 116,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 116,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 116,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "coordenadas = (40.7128, -74.0060)\nprint(f\"Lat: {coordenadas[0]}, Lon: {coordenadas[1]}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "numeros = {1, 2, 3, 2, 4}\nprint(f\"\u00danicos: {numeros}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "persona = {'nombre': 'Ana', 'edad': 25}\nprint(f\"Persona: {persona}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "matriz = [[1, 2], [3, 4]]\nfor fila in matriz:\n    print(fila)",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "grupos = {'A': ['Juan'], 'B': ['Ana']}\nprint(f\"Grupos: {grupos}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "datos = [['Ana', 85], ['Luis', 90]]\nfor nombre, nota in datos:\n    print(f\"{nombre}: {nota}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "try:\n    x = int('abc')\nexcept ValueError:\n    print('Error de conversi\u00f3n')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "try:\n    raise ValueError('Error personalizado')\nexcept ValueError as e:\n    print(f'Capturado: {e}')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    print('Procesando')\nfinally:\n    print('Limpieza')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "pares = [x for x in range(10) if x % 2 == 0]\nprint(f\"Pares: {pares}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "cuadrados = list(map(lambda x: x**2, [1, 2, 3]))\nprint(f\"Cuadrados: {cuadrados}\")",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "def contador():\n    for i in range(3):\n        yield i\n\nfor n in contador():\n    print(n)",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 29,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 30,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 31,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 32,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 33,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 116,
        "exercise_id": 34,
        "lesson_id": 23,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass\nclass Producto:\n    nombre: str\n    precio: float\n    \n    def con_descuento(self, porcentaje):\n        return self.precio * (1 - porcentaje/100)\n\np = Producto(\"Laptop\", 1000)\nprint(f\"Precio con descuento: {p.con_descuento(10)}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 35,
        "lesson_id": 24,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Usuario:\n    nombre: str\n    activo: bool = False\n    \n    def activar(self):\n        return Usuario(self.nombre, True)\n\nusuario = Usuario(\"Carlos\")\nusuario_activo = usuario.activar()\nprint(f\"Original: {usuario}\")\nprint(f\"Activado: {usuario_activo}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 36,
        "lesson_id": 25,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Rectangulo:\n    largo: float\n    ancho: float\n    \n    @property\n    def area(self):\n        return self.largo * self.ancho\n\nrect = Rectangulo(10, 5)\nprint(f\"\u00c1rea: {rect.area}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 37,
        "lesson_id": 26,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def mi_decorador(func):\n    def wrapper():\n        print(\"Antes de la funci\u00f3n\")\n        func()\n        print(\"Despu\u00e9s de la funci\u00f3n\")\n    return wrapper\n\n@mi_decorador\ndef saluda():\n    print(\"\u00a1Hola!\")\n\nsaluda()"
      },
      {
        "user_id": 116,
        "exercise_id": 38,
        "lesson_id": 27,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def generar_numeros(maximo):\n    for i in range(maximo):\n        yield i\n\nfor num in generar_numeros(3):\n    print(f\"N\u00famero generado: {num}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 39,
        "lesson_id": 28,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "numeros = [1, 2, 3, 4, 5, 6]\n\n# Doble de cada n\u00famero\ndobles = list(map(lambda x: x * 2, numeros))\nprint(f\"Dobles: {dobles}\")\n\n# Solo n\u00fameros pares\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 40,
        "lesson_id": 29,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# Pipeline de datos\nnumeros = range(1, 11)\nimpares = filter(lambda x: x % 2 != 0, numeros)\ncuadrados = list(map(lambda x: x**2, impares))\nprint(f\"Cuadrados de impares: {cuadrados}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 41,
        "lesson_id": 30,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# List comprehension anidada para aplanar\nmatriz = [[1, 2], [3, 4], [5, 6]]\nplana = [elemento for fila in matriz for elemento in fila]\nprint(f\"Lista plana: {plana}\")"
      },
      {
        "user_id": 116,
        "exercise_id": 43,
        "lesson_id": 31,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "import re\n\ntexto = \"Contacto: juan@email.com y maria@test.org\"\npatron = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nemails = re.findall(patron, texto)\nprint(f\"Emails encontrados: {emails}\")"
      }
    ]
  },
  {
    "user_info": {
      "id": 117,
      "username": "exam_ready_course3_user3",
      "email": "exam_ready_course3_user3@pycher.com",
      "password": "password123",
      "first_name": "ExamReady3",
      "last_name": "User3"
    },
    "enrollments": [
      {
        "user_id": 117,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 117,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 117,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 117,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 117,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 117,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 117,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 117,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "coordenadas = (40.7128, -74.0060)\nprint(f\"Lat: {coordenadas[0]}, Lon: {coordenadas[1]}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "numeros = {1, 2, 3, 2, 4}\nprint(f\"\u00danicos: {numeros}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "persona = {'nombre': 'Ana', 'edad': 25}\nprint(f\"Persona: {persona}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "matriz = [[1, 2], [3, 4]]\nfor fila in matriz:\n    print(fila)",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "grupos = {'A': ['Juan'], 'B': ['Ana']}\nprint(f\"Grupos: {grupos}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "datos = [['Ana', 85], ['Luis', 90]]\nfor nombre, nota in datos:\n    print(f\"{nombre}: {nota}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "try:\n    x = int('abc')\nexcept ValueError:\n    print('Error de conversi\u00f3n')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "try:\n    raise ValueError('Error personalizado')\nexcept ValueError as e:\n    print(f'Capturado: {e}')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    print('Procesando')\nfinally:\n    print('Limpieza')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "pares = [x for x in range(10) if x % 2 == 0]\nprint(f\"Pares: {pares}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "cuadrados = list(map(lambda x: x**2, [1, 2, 3]))\nprint(f\"Cuadrados: {cuadrados}\")",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "def contador():\n    for i in range(3):\n        yield i\n\nfor n in contador():\n    print(n)",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 29,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 30,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 31,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 32,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 33,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 117,
        "exercise_id": 34,
        "lesson_id": 23,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass\nclass Coordenada:\n    lat: float\n    lon: float\n    \n    def __str__(self):\n        return f\"({self.lat}, {self.lon})\"\n\nc = Coordenada(40.7128, -74.0060)\nprint(f\"NYC: {c}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 35,
        "lesson_id": 24,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Usuario:\n    nombre: str\n    activo: bool = False\n    \n    def activar(self):\n        return Usuario(self.nombre, True)\n\nusuario = Usuario(\"Carlos\")\nusuario_activo = usuario.activar()\nprint(f\"Original: {usuario}\")\nprint(f\"Activado: {usuario_activo}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 36,
        "lesson_id": 25,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Rectangulo:\n    largo: float\n    ancho: float\n    \n    @property\n    def area(self):\n        return self.largo * self.ancho\n\nrect = Rectangulo(10, 5)\nprint(f\"\u00c1rea: {rect.area}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 37,
        "lesson_id": 26,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def mi_decorador(func):\n    def wrapper():\n        print(\"Antes de la funci\u00f3n\")\n        func()\n        print(\"Despu\u00e9s de la funci\u00f3n\")\n    return wrapper\n\n@mi_decorador\ndef saluda():\n    print(\"\u00a1Hola!\")\n\nsaluda()"
      },
      {
        "user_id": 117,
        "exercise_id": 38,
        "lesson_id": 27,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def generar_numeros(maximo):\n    for i in range(maximo):\n        yield i\n\nfor num in generar_numeros(3):\n    print(f\"N\u00famero generado: {num}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 39,
        "lesson_id": 28,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "numeros = [1, 2, 3, 4, 5, 6]\n\n# Doble de cada n\u00famero\ndobles = list(map(lambda x: x * 2, numeros))\nprint(f\"Dobles: {dobles}\")\n\n# Solo n\u00fameros pares\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 40,
        "lesson_id": 29,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# Pipeline de datos\nnumeros = range(1, 11)\nimpares = filter(lambda x: x % 2 != 0, numeros)\ncuadrados = list(map(lambda x: x**2, impares))\nprint(f\"Cuadrados de impares: {cuadrados}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 41,
        "lesson_id": 30,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# List comprehension anidada para aplanar\nmatriz = [[1, 2], [3, 4], [5, 6]]\nplana = [elemento for fila in matriz for elemento in fila]\nprint(f\"Lista plana: {plana}\")"
      },
      {
        "user_id": 117,
        "exercise_id": 43,
        "lesson_id": 31,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "import re\n\ntexto = \"Contacto: juan@email.com y maria@test.org\"\npatron = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nemails = re.findall(patron, texto)\nprint(f\"Emails encontrados: {emails}\")"
      }
    ]
  },
  {
    "user_info": {
      "id": 118,
      "username": "exam_ready_course3_user4",
      "email": "exam_ready_course3_user4@pycher.com",
      "password": "password123",
      "first_name": "ExamReady3",
      "last_name": "User4"
    },
    "enrollments": [
      {
        "user_id": 118,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 118,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 118,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 118,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 118,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 118,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 118,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 118,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "coordenadas = (40.7128, -74.0060)\nprint(f\"Lat: {coordenadas[0]}, Lon: {coordenadas[1]}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "numeros = {1, 2, 3, 2, 4}\nprint(f\"\u00danicos: {numeros}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "persona = {'nombre': 'Ana', 'edad': 25}\nprint(f\"Persona: {persona}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "matriz = [[1, 2], [3, 4]]\nfor fila in matriz:\n    print(fila)",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "grupos = {'A': ['Juan'], 'B': ['Ana']}\nprint(f\"Grupos: {grupos}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "datos = [['Ana', 85], ['Luis', 90]]\nfor nombre, nota in datos:\n    print(f\"{nombre}: {nota}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "try:\n    x = int('abc')\nexcept ValueError:\n    print('Error de conversi\u00f3n')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "try:\n    raise ValueError('Error personalizado')\nexcept ValueError as e:\n    print(f'Capturado: {e}')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    print('Procesando')\nfinally:\n    print('Limpieza')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "pares = [x for x in range(10) if x % 2 == 0]\nprint(f\"Pares: {pares}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "cuadrados = list(map(lambda x: x**2, [1, 2, 3]))\nprint(f\"Cuadrados: {cuadrados}\")",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "def contador():\n    for i in range(3):\n        yield i\n\nfor n in contador():\n    print(n)",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 29,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 30,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 31,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 32,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 33,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 118,
        "exercise_id": 34,
        "lesson_id": 23,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass\nclass Temperatura:\n    celsius: float\n    \n    def a_fahrenheit(self):\n        return (self.celsius * 9/5) + 32\n\nt = Temperatura(25)\nprint(f\"{t.celsius}\u00b0C = {t.a_fahrenheit()}\u00b0F\")"
      },
      {
        "user_id": 118,
        "exercise_id": 35,
        "lesson_id": 24,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Usuario:\n    nombre: str\n    activo: bool = False\n    \n    def activar(self):\n        return Usuario(self.nombre, True)\n\nusuario = Usuario(\"Carlos\")\nusuario_activo = usuario.activar()\nprint(f\"Original: {usuario}\")\nprint(f\"Activado: {usuario_activo}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 36,
        "lesson_id": 25,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Rectangulo:\n    largo: float\n    ancho: float\n    \n    @property\n    def area(self):\n        return self.largo * self.ancho\n\nrect = Rectangulo(10, 5)\nprint(f\"\u00c1rea: {rect.area}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 37,
        "lesson_id": 26,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def mi_decorador(func):\n    def wrapper():\n        print(\"Antes de la funci\u00f3n\")\n        func()\n        print(\"Despu\u00e9s de la funci\u00f3n\")\n    return wrapper\n\n@mi_decorador\ndef saluda():\n    print(\"\u00a1Hola!\")\n\nsaluda()"
      },
      {
        "user_id": 118,
        "exercise_id": 38,
        "lesson_id": 27,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def generar_numeros(maximo):\n    for i in range(maximo):\n        yield i\n\nfor num in generar_numeros(3):\n    print(f\"N\u00famero generado: {num}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 39,
        "lesson_id": 28,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "numeros = [1, 2, 3, 4, 5, 6]\n\n# Doble de cada n\u00famero\ndobles = list(map(lambda x: x * 2, numeros))\nprint(f\"Dobles: {dobles}\")\n\n# Solo n\u00fameros pares\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 40,
        "lesson_id": 29,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# Pipeline de datos\nnumeros = range(1, 11)\nimpares = filter(lambda x: x % 2 != 0, numeros)\ncuadrados = list(map(lambda x: x**2, impares))\nprint(f\"Cuadrados de impares: {cuadrados}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 41,
        "lesson_id": 30,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# List comprehension anidada para aplanar\nmatriz = [[1, 2], [3, 4], [5, 6]]\nplana = [elemento for fila in matriz for elemento in fila]\nprint(f\"Lista plana: {plana}\")"
      },
      {
        "user_id": 118,
        "exercise_id": 43,
        "lesson_id": 31,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "import re\n\ntexto = \"Contacto: juan@email.com y maria@test.org\"\npatron = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nemails = re.findall(patron, texto)\nprint(f\"Emails encontrados: {emails}\")"
      }
    ]
  },
  {
    "user_info": {
      "id": 119,
      "username": "exam_ready_course3_user5",
      "email": "exam_ready_course3_user5@pycher.com",
      "password": "password123",
      "first_name": "ExamReady3",
      "last_name": "User5"
    },
    "enrollments": [
      {
        "user_id": 119,
        "course_id": 1,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 119,
        "course_id": 2,
        "is_completed": true,
        "progress_percentage": 100.0,
        "is_active": true,
        "exam_unlocked": true
      },
      {
        "user_id": 119,
        "course_id": 3,
        "is_completed": false,
        "progress_percentage": 92.0,
        "is_active": true,
        "exam_unlocked": true
      }
    ],
    "module_progress": [
      {
        "user_id": 119,
        "module_id": 1,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 2,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 3,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 5,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 6,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 7,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 9,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 10,
        "is_completed": true,
        "is_unlocked": true
      },
      {
        "user_id": 119,
        "module_id": 11,
        "is_completed": true,
        "is_unlocked": true
      }
    ],
    "lesson_progress": [
      {
        "user_id": 119,
        "lesson_id": 1,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 2,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 3,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 4,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 5,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 6,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 7,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 8,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 9,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 10,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 11,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 12,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 13,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 14,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 15,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 16,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 17,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 18,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 19,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 20,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 21,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 22,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 23,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 24,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 25,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 26,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 27,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 28,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 29,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 30,
        "is_completed": true
      },
      {
        "user_id": 119,
        "lesson_id": 31,
        "is_completed": true
      }
    ],
    "exercise_submissions": [
      {
        "user_id": 119,
        "exercise_id": 1,
        "lesson_id": 1,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 2,
        "lesson_id": 2,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 3,
        "lesson_id": 3,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 4,
        "lesson_id": 4,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 5,
        "lesson_id": 5,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 6,
        "lesson_id": 6,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 7,
        "lesson_id": 7,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 8,
        "lesson_id": 8,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 9,
        "lesson_id": 9,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 10,
        "lesson_id": 10,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 11,
        "lesson_id": 11,
        "is_correct": true,
        "code_submitted": "print('Ejercicio completado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 12,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 13,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 14,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 15,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 16,
        "is_correct": true,
        "code_submitted": "print('Examen aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 17,
        "lesson_id": 12,
        "is_correct": true,
        "code_submitted": "coordenadas = (40.7128, -74.0060)\nprint(f\"Lat: {coordenadas[0]}, Lon: {coordenadas[1]}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 18,
        "lesson_id": 13,
        "is_correct": true,
        "code_submitted": "numeros = {1, 2, 3, 2, 4}\nprint(f\"\u00danicos: {numeros}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 19,
        "lesson_id": 14,
        "is_correct": true,
        "code_submitted": "persona = {'nombre': 'Ana', 'edad': 25}\nprint(f\"Persona: {persona}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 20,
        "lesson_id": 15,
        "is_correct": true,
        "code_submitted": "matriz = [[1, 2], [3, 4]]\nfor fila in matriz:\n    print(fila)",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 21,
        "lesson_id": 16,
        "is_correct": true,
        "code_submitted": "grupos = {'A': ['Juan'], 'B': ['Ana']}\nprint(f\"Grupos: {grupos}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 22,
        "lesson_id": 17,
        "is_correct": true,
        "code_submitted": "datos = [['Ana', 85], ['Luis', 90]]\nfor nombre, nota in datos:\n    print(f\"{nombre}: {nota}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 23,
        "lesson_id": 18,
        "is_correct": true,
        "code_submitted": "try:\n    x = int('abc')\nexcept ValueError:\n    print('Error de conversi\u00f3n')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 24,
        "lesson_id": 19,
        "is_correct": true,
        "code_submitted": "try:\n    raise ValueError('Error personalizado')\nexcept ValueError as e:\n    print(f'Capturado: {e}')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 25,
        "lesson_id": 20,
        "is_correct": true,
        "code_submitted": "try:\n    print('Procesando')\nfinally:\n    print('Limpieza')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 26,
        "lesson_id": 21,
        "is_correct": true,
        "code_submitted": "pares = [x for x in range(10) if x % 2 == 0]\nprint(f\"Pares: {pares}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 27,
        "lesson_id": 22,
        "is_correct": true,
        "code_submitted": "cuadrados = list(map(lambda x: x**2, [1, 2, 3]))\nprint(f\"Cuadrados: {cuadrados}\")",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 28,
        "lesson_id": 23,
        "is_correct": true,
        "code_submitted": "def contador():\n    for i in range(3):\n        yield i\n\nfor n in contador():\n    print(n)",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 29,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 30,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 31,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 32,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 33,
        "is_correct": true,
        "code_submitted": "print('Examen Course 2 aprobado')",
        "attempt_number": 1
      },
      {
        "user_id": 119,
        "exercise_id": 34,
        "lesson_id": 23,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass\nclass Punto:\n    x: int\n    y: int\n    \n    def distancia_al_origen(self):\n        return (self.x**2 + self.y**2)**0.5\n\np1 = Punto(3, 4)\nprint(f\"Punto: {p1}\")\nprint(f\"Distancia: {p1.distancia_al_origen()}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 35,
        "lesson_id": 24,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Usuario:\n    nombre: str\n    activo: bool = False\n    \n    def activar(self):\n        return Usuario(self.nombre, True)\n\nusuario = Usuario(\"Carlos\")\nusuario_activo = usuario.activar()\nprint(f\"Original: {usuario}\")\nprint(f\"Activado: {usuario_activo}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 36,
        "lesson_id": 25,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "from dataclasses import dataclass\n\n@dataclass(frozen=True)\nclass Rectangulo:\n    largo: float\n    ancho: float\n    \n    @property\n    def area(self):\n        return self.largo * self.ancho\n\nrect = Rectangulo(10, 5)\nprint(f\"\u00c1rea: {rect.area}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 37,
        "lesson_id": 26,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def mi_decorador(func):\n    def wrapper():\n        print(\"Antes de la funci\u00f3n\")\n        func()\n        print(\"Despu\u00e9s de la funci\u00f3n\")\n    return wrapper\n\n@mi_decorador\ndef saluda():\n    print(\"\u00a1Hola!\")\n\nsaluda()"
      },
      {
        "user_id": 119,
        "exercise_id": 38,
        "lesson_id": 27,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "def generar_numeros(maximo):\n    for i in range(maximo):\n        yield i\n\nfor num in generar_numeros(3):\n    print(f\"N\u00famero generado: {num}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 39,
        "lesson_id": 28,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "numeros = [1, 2, 3, 4, 5, 6]\n\n# Doble de cada n\u00famero\ndobles = list(map(lambda x: x * 2, numeros))\nprint(f\"Dobles: {dobles}\")\n\n# Solo n\u00fameros pares\npares = list(filter(lambda x: x % 2 == 0, numeros))\nprint(f\"Pares: {pares}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 40,
        "lesson_id": 29,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# Pipeline de datos\nnumeros = range(1, 11)\nimpares = filter(lambda x: x % 2 != 0, numeros)\ncuadrados = list(map(lambda x: x**2, impares))\nprint(f\"Cuadrados de impares: {cuadrados}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 41,
        "lesson_id": 30,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "# List comprehension anidada para aplanar\nmatriz = [[1, 2], [3, 4], [5, 6]]\nplana = [elemento for fila in matriz for elemento in fila]\nprint(f\"Lista plana: {plana}\")"
      },
      {
        "user_id": 119,
        "exercise_id": 43,
        "lesson_id": 31,
        "is_correct": true,
        "attempt_number": 1,
        "code_submitted": "import re\n\ntexto = \"Contacto: juan@email.com y maria@test.org\"\npatron = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nemails = re.findall(patron, texto)\nprint(f\"Emails encontrados: {emails}\")"
      }
    ]
  }
]