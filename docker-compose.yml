services:
  postgres:
    image: docker.io/library/postgres:14
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks: ["pycher-network"]
    ports:
      - "5432:5432"

  redis:
    image: docker.io/library/redis:7-alpine
    command:
      [
        "redis-server",
        "--requirepass", "${REDIS_PASSWORD}",
        "--user", "${REDIS_USER}", "on", ">${REDIS_PASSWORD}", "~*", "+@all"
      ]
    environment:
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes: ["redis-data:/data"]
    networks: ["pycher-network"]
    ports:
      - "6379:6379"

  user-service:
    build: ./backend/user-service
    volumes:
      - ./backend/user-service:/app
      - ./backend/shared:/app/shared:ro
    depends_on:
      - postgres
      - redis
      - content-service  # Wait for migrations to complete
    env_file:
      - .env.development
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
    ports:
      - "8003:8003"
    networks: ["pycher-network"]

  content-service:
    build: ./backend/content-service
    volumes:
      - ./backend/content-service:/app
      - ./backend/shared:/app/shared:ro
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
    ports:
      - "8002:8002"
    command: >
      sh -c "export PYTHONPATH=/app:/app/shared && alembic -c /app/shared/alembic.ini upgrade head && python /app/shared/seed_db.py && uvicorn main:app --host 0.0.0.0 --port 8002 --reload"
    networks: ["pycher-network"]

  api-gateway:
    build:
      context: ./backend/api-gateway
    volumes:
      - ./backend/api-gateway:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.development
    networks: ["pycher-network"]
    depends_on:
      - user-service
      - content-service
      - execution-service
      - ai-service

  execution-service:
    build:
      context: ./backend/execution-service
    volumes:
      - ./backend/execution-service:/app
      - ./backend/shared/seed_data:/app/shared/seed_data:ro
    security_opt: ["no-new-privileges=true"]
    networks: ["pycher-network"]

  ai-service:
    build: ./backend/ai-service
    volumes:
      - ./backend/ai-service:/app
    env_file:
      - .env.development
    networks: ["pycher-network"]

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    networks: ["pycher-network"]
    depends_on:
      - api-gateway

networks:
  pycher-network:
    driver: bridge

volumes:
  pg-data:
  redis-data:
  frontend_node_modules:
