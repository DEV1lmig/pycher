databases:
  - name: pycher-db
    databaseName: pycher
    user: pycher_user
    plan: free
  - name: pycher-redis
    plan: free

services:
  - type: web
    name: frontend
    runtime: static
    rootDir: frontend
    buildCommand: "pnpm install && pnpm build"
    staticPublishPathstaticPublishPath: "dist"
    routes:
      - type: rewrite
        source: "/*"
        destination: "/index.html"
    envVars:
      - key: VITE_API_URL
        fromService:
          type: web
          name: api-gateway
          property: url

  - type: web
    name: api-gateway
    runtime: docker
    rootDir: backend/api-gateway
    dockerfilePath: ./Dockerfile
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: pycher-db
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: pycher-redis
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: GITHUB_TOKEN
        sync: false
      - key: EXECUTION_SERVICE_URL
        fromService:
          type: pserv
          name: execution-service
          property: hostport
      - key: CONTENT_SERVICE_URL
        fromService:
          type: pserv
          name: content-service
          property: hostport
      - key: USER_SERVICE_URL
        fromService:
          type: pserv
          name: user-service
          property: hostport
      - key: AI_SERVICE_URL
        fromService:
          type: pserv
          name: ai-service
          property: hostport

  - type: pserv
    name: content-service
    runtime: docker
    rootDir: backend/content-service
    dockerfilePath: ./Dockerfile
    # The preDeployCommand is not supported on the free plan.
    # You will need to run the migrations manually or upgrade to a paid plan.
    # preDeployCommand: "alembic -c /app/shared/alembic.ini upgrade head && python /app/shared/seed_db.py"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: pycher-db
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: pycher-redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: api-gateway
          envVarKey: SECRET_KEY
      - key: GITHUB_TOKEN
        fromService:
          type: web
          name: api-gateway
          envVarKey: GITHUB_TOKEN

  - type: pserv
    name: user-service
    runtime: docker
    rootDir: backend/user-service
    dockerfilePath: ./Dockerfile
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: pycher-db
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: pycher-redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: api-gateway
          envVarKey: SECRET_KEY

  - type: pserv
    name: execution-service
    runtime: docker
    rootDir: backend/execution-service
    dockerfilePath: ./Dockerfile
    envVars:
      - key: SECRET_KEY
        fromService:
          type: web
          name: api-gateway
          envVarKey: SECRET_KEY

  - type: pserv
    name: ai-service
    runtime: docker
    rootDir: backend/ai-service
    dockerfilePath: ./Dockerfile
    envVars:
      - key: SECRET_KEY
        fromService:
          type: web
          name: api-gateway
          envVarKey: SECRET_KEY